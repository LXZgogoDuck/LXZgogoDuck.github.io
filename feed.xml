<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://lxzgogoduck.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://lxzgogoduck.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-06-16T21:07:19+00:00</updated><id>https://lxzgogoduck.github.io/feed.xml</id><title type="html">blank</title><subtitle>Sharing my life &amp; experience &amp; tips &amp; technical harvesting. </subtitle><entry><title type="html">Preparation Tips for TOEFL Exams</title><link href="https://lxzgogoduck.github.io/blog/2025/toefl/" rel="alternate" type="text/html" title="Preparation Tips for TOEFL Exams"/><published>2025-05-26T14:24:00+00:00</published><updated>2025-05-26T14:24:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2025/toefl</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2025/toefl/"><![CDATA[<p>After cramming for the TOEFL exam for just one day, I managed to get a satisfying score: <strong>L30, W30, R28</strong>. Here are some preparation materials and tips that I found especially helpful for short-term preparation.</p> <hr/> <h2 id="Ô∏è-writing">‚úçÔ∏è Writing</h2> <p>A big shoutout to <a href="https://www.bilibili.com/video/BV1UaxueAEv6?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=3154159463fb2054a6a29dbc19b73f67">Vince</a> for his insightful video on writing strategies. Below are my main takeaways:</p> <h3 id="-integrated-writing">üß† Integrated Writing</h3> <ul> <li>During the <strong>3-minute reading</strong>, write down the main point and supporting details.</li> <li>For the <strong>listening</strong>, capture the speaker‚Äôs arguments <em>and</em> their examples ‚Äî include specific details.</li> <li>Structure the essay to balance content from both sources, roughly a 1:1.2 ratio of reading to listening.</li> <li>Use the original wording from the reading ‚Äî no need for heavy paraphrasing.</li> <li>Reserve 1‚Äì2 minutes at the end for proofreading.</li> </ul> <h3 id="-independent-writing">üí¨ Independent Writing</h3> <ul> <li>Use a solid structure:<br/> <strong>Main argument</strong> ‚Üí <strong>Specific examples</strong> ‚Üí <strong>Concession</strong> (e.g., <em>Granted‚Ä¶ however‚Ä¶</em>) ‚Üí <strong>Conclusion</strong></li> <li>Clarity and coherence matter more than fancy vocabulary.</li> </ul> <hr/> <h2 id="-listening---reading">üéß Listening &amp; üìñ Reading</h2> <p>The <a href="https://www.ets.org/toefl/test-takers/ibt/about/content.html">Official Guide video</a> gives a good overview of the format.</p> <p>For <strong>listening</strong>:</p> <ul> <li>Focus on following the speaker‚Äôs logic.</li> <li>Take notes on the <strong>main thread</strong> and <strong>key details</strong> (examples, shifts in topic, emphasis).</li> </ul> <p>For <strong>reading</strong>:</p> <ul> <li>Skim the passage first, put down the main points and main details, and then dive into the questions.</li> </ul> <hr/> <h2 id="Ô∏è-speaking">üó£Ô∏è Speaking</h2> <p>Still a work in progress‚Ä¶ üò≠</p> <hr/> <p>Let me know if you find these useful ‚Äî and good luck with your prep!</p>]]></content><author><name></name></author><category term="test-prep"/><category term="toefl"/><category term="preparation,"/><category term="writing,"/><category term="listening,"/><category term="reading"/><summary type="html"><![CDATA[Useful links and techniques I found effective for short-term TOEFL preparation.]]></summary></entry><entry><title type="html">Photo Gallery</title><link href="https://lxzgogoduck.github.io/blog/2024/photo-gallery/" rel="alternate" type="text/html" title="Photo Gallery"/><published>2024-12-04T00:00:00+00:00</published><updated>2024-12-04T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/photo-gallery</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/photo-gallery/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://lxzgogoduck.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[<p>May 14, 2024[[read-time]] min read We‚Äôre introducing a series of updates across the Gemini family of models, including the new 1.5 Flash, our lightweight model for speed and efficiency, and Project Astra, our vision for the future of AI assistants. In December, we launched our first natively multimodal model Gemini 1.0 in three sizes: Ultra, Pro and Nano. Just a few months later we released 1.5 Pro, with enhanced performance and a breakthrough long context window of 1 million tokens.Developers and enterprise customers have been putting 1.5 Pro to use in incredible ways and finding its long context window, multimodal reasoning capabilities and impressive overall performance incredibly useful.We know from user feedback that some applications need lower latency and a lower cost to serve. This inspired us to keep innovating, so today, we‚Äôre introducing Gemini 1.5 Flash: a model that‚Äôs lighter-weight than 1.5 Pro, and designed to be fast and efficient to serve at scale.Both 1.5 Pro and 1.5 Flash are available in public preview with a 1 million token context window in Google AI Studio and Vertex AI. And now, 1.5 Pro is also available with a 2 million token context window via waitlist to developers using the API and to Google Cloud customers.We‚Äôre also introducing updates across the Gemini family of models, announcing our next generation of open models, Gemma 2, and sharing progress on the future of AI assistants, with Project Astra.Context lengths of leading foundation models compared with Gemini 1.5‚Äôs 2 million token capability1.5 Flash is the newest addition to the Gemini model family and the fastest Gemini model served in the API. It‚Äôs optimized for high-volume, high-frequency tasks at scale, is more cost-efficient to serve and features our breakthrough long context window.While it‚Äôs a lighter weight model than 1.5 Pro, it‚Äôs highly capable of multimodal reasoning across vast amounts of information and delivers impressive quality for its size.The new Gemini 1.5 Flash model is optimized for speed and efficiency, is highly capable of multimodal reasoning and features our breakthrough long context window.1.5 Flash excels at summarization, chat applications, image and video captioning, data extraction from long documents and tables, and more. This is because it‚Äôs been trained by 1.5 Pro through a process called ‚Äúdistillation,‚Äù where the most essential knowledge and skills from a larger model are transferred to a smaller, more efficient model.Read more about 1.5 Flash in our updated Gemini 1.5 technical report, on the Gemini technology page, and learn about 1.5 Flash‚Äôs availability and pricing.Over the last few months, we‚Äôve significantly improved 1.5 Pro, our best model for general performance across a wide range of tasks.Beyond extending its context window to 2 million tokens, we‚Äôve enhanced its code generation, logical reasoning and planning, multi-turn conversation, and audio and image understanding through data and algorithmic advances. We see strong improvements on public and internal benchmarks for each of these tasks.1.5 Pro can now follow increasingly complex and nuanced instructions, including ones that specify product-level behavior involving role, format and style. We‚Äôve improved control over the model‚Äôs responses for specific use cases, like crafting the persona and response style of a chat agent or automating workflows through multiple function calls. And we‚Äôve enabled users to steer model behavior by setting system instructions.We added audio understanding in the Gemini API and Google AI Studio, so 1.5 Pro can now reason across image and audio for videos uploaded in Google AI Studio. And we‚Äôre now integrating 1.5 Pro into Google products, including Gemini Advanced and in Workspace apps.Read more about 1.5 Pro in our updated Gemini 1.5 technical report and on the Gemini technology page.Gemini Nano is expanding beyond text-only inputs to include images as well. Starting with Pixel, applications using Gemini Nano with Multimodality will be able to understand the world the way people do ‚Äî not just through text, but also through sight, sound and spoken language.Read more about Gemini 1.0 Nano on Android.Today, we‚Äôre also sharing a series of updates to Gemma, our family of open models built from the same research and technology used to create the Gemini models.We‚Äôre announcing Gemma 2, our next generation of open models for responsible AI innovation. Gemma 2 has a new architecture designed for breakthrough performance and efficiency, and will be available in new sizes.The Gemma family is also expanding with PaliGemma, our first vision-language model inspired by PaLI-3. And we‚Äôve upgraded our Responsible Generative AI Toolkit with LLM Comparator for evaluating the quality of model responses.Read more on the Developer blog.As part of Google DeepMind‚Äôs mission to build AI responsibly to benefit humanity, we‚Äôve always wanted to develop universal AI agents that can be helpful in everyday life. That‚Äôs why today, we‚Äôre sharing our progress in building the future of AI assistants with Project Astra (advanced seeing and talking responsive agent).To be truly useful, an agent needs to understand and respond to the complex and dynamic world just like people do ‚Äî and take in and remember what it sees and hears to understand context and take action. It also needs to be proactive, teachable and personal, so users can talk to it naturally and without lag or delay.While we‚Äôve made incredible progress developing AI systems that can understand multimodal information, getting response time down to something conversational is a difficult engineering challenge. Over the past few years, we‚Äôve been working to improve how our models perceive, reason and converse to make the pace and quality of interaction feel more natural.Building on Gemini, we‚Äôve developed prototype agents that can process information faster by continuously encoding video frames, combining the video and speech input into a timeline of events, and caching this information for efficient recall.By leveraging our leading speech models, we also enhanced how they sound, giving the agents a wider range of intonations. These agents can better understand the context they‚Äôre being used in, and respond quickly, in conversation.With technology like this, it‚Äôs easy to envision a future where people could have an expert AI assistant by their side, through a phone or glasses. And some of these capabilities are coming to Google products, like the Gemini app and web experience, later this year.We‚Äôve made incredible progress so far with our family of Gemini models, and we‚Äôre always striving to advance the state-of-the-art even further. By investing in a relentless production line of innovation, we‚Äôre able to explore new ideas at the frontier, while also unlocking the possibility of new and exciting Gemini use cases.Learn more about Gemini and its capabilities. Your information will be used in accordance with Google‚Äôs privacy policy.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Done. Just one step more.
    
      Check your inbox to confirm your subscription.
    You are already subscribed to our newsletter.
    You can also subscribe with a
    different email address
    
    .
    
  Let‚Äôs stay in touch. Get the latest news from Google in your inbox.
          Follow Us
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[We‚Äôre sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">Tabs</title><link href="https://lxzgogoduck.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="Tabs"/><published>2024-05-01T00:00:00+00:00</published><updated>2024-05-01T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/tabs</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/tabs/"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  &lt;li class="active" id="log-php"&gt;
      &lt;a href="#"&gt;php &lt;/a&gt;
  &lt;/li&gt;
  
  &lt;li id="log-js"&gt;
      &lt;a href="#"&gt;js &lt;/a&gt;
  &lt;/li&gt;
  
  &lt;li id="log-ruby"&gt;
      &lt;a href="#"&gt;ruby &lt;/a&gt;
  &lt;/li&gt;
</code></pre></div></div> <p>&lt;/ul&gt;</p> <ul class="tab-content" id="32986a5c-b242-491d-a940-55e91833ce26" data-name="log"> <li class="active"><p>)</p> </li> <li><p>)</p> </li> <li><p>)</p> <p><a href="# (">//</a>: # (pputs ‚Äòhello‚Äô)</p> </li> </ul> <p>)</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  &lt;li class="active" id="data-struct-yaml"&gt;
      &lt;a href="#"&gt;yaml &lt;/a&gt;
  &lt;/li&gt;
  
  &lt;li id="data-struct-json"&gt;
      &lt;a href="#"&gt;json &lt;/a&gt;
  &lt;/li&gt;
</code></pre></div></div> <p>&lt;/ul&gt;</p> <ul class="tab-content" id="31808fec-16a8-41ba-82d2-10616677f108" data-name="data-struct"> <li class="active"><p>)</p> <p><a href="# (">//</a>: # ( - ‚Äúwhatsup‚Äù)</p> <p><a href="# (">//</a>: # ( - ‚Äúhi‚Äù)</p> </li> <li><p>)</p> <p><a href="# (">//</a>: # ( ‚Äúhello‚Äù: [‚Äúwhatsup‚Äù, ‚Äúhi‚Äù])</p> </li> </ul> <p>)</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  &lt;li class="active" id="something-else-text"&gt;
      &lt;a href="#"&gt;text &lt;/a&gt;
  &lt;/li&gt;
  
  &lt;li id="something-else-quote"&gt;
      &lt;a href="#"&gt;quote &lt;/a&gt;
  &lt;/li&gt;
  
  &lt;li id="something-else-list"&gt;
      &lt;a href="#"&gt;list &lt;/a&gt;
  &lt;/li&gt;
</code></pre></div></div> <p>&lt;/ul&gt;</p> <ul class="tab-content" id="13e04ea5-9d96-4be7-bca6-a940627c0f84" data-name="something-else"> <li class="active"><p>)</p> </li> <li><p>)</p> </li> <li><p>)</p> </li> </ul> <p>)</p>]]></content><author><name></name></author><summary type="html"><![CDATA[&lt;li class="active" id="log-php"&gt; &lt;a href="#"&gt;php &lt;/a&gt; &lt;/li&gt; &lt;li id="log-js"&gt; &lt;a href="#"&gt;js &lt;/a&gt; &lt;/li&gt; &lt;li id="log-ruby"&gt; &lt;a href="#"&gt;ruby &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; ) [//]: # () [//]: # (php) [//]: # (var_dump&amp;#40;'hello'&amp;#41;;) [//]: # () [//]: # () [//]: # ( ) [//]: # () [//]: # (javascript) [//]: # (console.log&amp;#40;"hello"&amp;#41;;) [//]: # () [//]: # () [//]: # ( ) [//]: # () [//]: # (javascript) [//]: # (pputs 'hello') [//]: # () [//]: # () [//]: # ( ) //: # () //: # (## Another example) //: # () //: # (&lt;ul id="data-struct" class="tab" data-tab="624e3fde-dcc1-41b7-9eed-43e0c9f72534" data-name="data-struct"&gt; &lt;li class="active" id="data-struct-yaml"&gt; &lt;a href="#"&gt;yaml &lt;/a&gt; &lt;/li&gt; &lt;li id="data-struct-json"&gt; &lt;a href="#"&gt;json &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; ) [//]: # () [//]: # (yaml) [//]: # (hello:) [//]: # ( - "whatsup") [//]: # ( - "hi") [//]: # () [//]: # () [//]: # ( ) [//]: # () [//]: # (json) [//]: # ({) [//]: # ( "hello": ["whatsup", "hi"]) [//]: # (}) [//]: # () [//]: # () [//]: # ( ) //: # () //: # (## Tabs for something else) //: # () //: # (&lt;ul id="something-else" class="tab" data-tab="a6cb8d92-1d45-47c8-a9b0-55090c289feb" data-name="something-else"&gt; &lt;li class="active" id="something-else-text"&gt; &lt;a href="#"&gt;text &lt;/a&gt; &lt;/li&gt; &lt;li id="something-else-quote"&gt; &lt;a href="#"&gt;quote &lt;/a&gt; &lt;/li&gt; &lt;li id="something-else-list"&gt; &lt;a href="#"&gt;list &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; ) [//]: # () [//]: # (Regular text) [//]: # () [//]: # ( ) [//]: # () [//]: # (&gt; A quote) [//]: # () [//]: # ( ) [//]: # () [//]: # (Hipster list) [//]: # () [//]: # (- brunch) [//]: # (- fixie) [//]: # (- raybans) [//]: # (- messenger bag) [//]: # () [//]: # ( )]]></summary></entry><entry><title type="html">Typograms</title><link href="https://lxzgogoduck.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="Typograms"/><published>2024-04-29T00:00:00+00:00</published><updated>2024-04-29T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/typograms</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/typograms/"><![CDATA[<table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äî&gt; My first diagram!)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äî&gt; My first diagram!)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äúhttps://example.com‚Äù</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td><strong>__</strong><strong>__</strong><strong>__</strong><em>__</em></td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>Welcome!</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>username</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>‚Äú<strong>**</strong>*‚Äù</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>‚ÄúSign-up‚Äù</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>+‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-+</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äúhttps://example.com‚Äù</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td><strong>__</strong><strong>__</strong><strong>__</strong><em>__</em></td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>Welcome!</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>username</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>‚Äú<strong>**</strong>*‚Äù</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>.‚Äî‚Äî‚Äî‚Äî‚Äî-.</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>‚ÄúSign-up‚Äù</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>‚Äô‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> <td>)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (For more examples, check out the [typograms documentation]&#40;https://google.github.io/typograms/#examples&#41;.)">//</a>: # (</td> <td>+‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-+</td> <td>)</td> </tr> </tbody> </table>]]></content><author><name></name></author><summary type="html"><![CDATA[//: # (|| ‚Äò‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò ||) //: # (|| .‚Äî‚Äî‚Äî‚Äî‚Äî-. ||) //: # (|| |‚Äù***‚Äù | ||) //: # (|| ‚Äò‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò ||) //: # (|| ||) //: # (|| .‚Äî‚Äî‚Äî‚Äî‚Äî-. ||) //: # (|| | ‚ÄúSign-up‚Äù | ||) //: # (|| ‚Äò‚Äî‚Äî‚Äî‚Äî‚Äî-‚Äò ||) //: # (|| ||) //: # (|+‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-+|) //: # (.‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî.) //: # () [//]: # () [//]: # () [//]: # (which generates:) [//]: # () [//]: # (typograms) [//]: # (.------------------------.) [//]: # (|.----------------------.|) [//]: # (||"https://example.com" ||) [//]: # (|'----------------------'|) [//]: # (| ______________________ |) [//]: # (|| ||) [//]: # (|| Welcome! ||) [//]: # (|| ||) [//]: # (|| ||) [//]: # (|| .----------------. ||) [//]: # (|| | username | ||) [//]: # (|| '----------------' ||) [//]: # (|| .----------------. ||) [//]: # (|| |"*******" | ||) [//]: # (|| '----------------' ||) [//]: # (|| ||) [//]: # (|| .----------------. ||) [//]: # (|| | "Sign-up" | ||) [//]: # (|| '----------------' ||) [//]: # (|| ||) [//]: # (|+----------------------+|) [//]: # (.------------------------.) [//]: # (`) //: # () //: # (For more examples, check out the [typograms documentation](https://google.github.io/typograms/#examples).)]]></summary></entry><entry><title type="html">Post Citation</title><link href="https://lxzgogoduck.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="Post Citation"/><published>2024-04-28T00:00:00+00:00</published><updated>2024-04-28T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/post-citation/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Pseudocode</title><link href="https://lxzgogoduck.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="Pseudocode"/><published>2024-04-15T00:00:00+00:00</published><updated>2024-04-15T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/pseudocode/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Advanced Images</title><link href="https://lxzgogoduck.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="Advanced Images"/><published>2024-01-27T00:00:00+00:00</published><updated>2024-01-27T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/advanced-images/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>&lt;/swiper-slide&gt;)</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>&lt;/swiper-slide&gt;)</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>&lt;/swiper-slide&gt;)</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>&lt;/swiper-slide&gt;)</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>&lt;/swiper-slide&gt;)</p> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>)</p> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>)</p>]]></content><author><name></name></author><summary type="html"><![CDATA[&lt;/swiper-slide&gt;) //: # ( &lt;/swiper-slide&gt;) //: # ( &lt;/swiper-slide&gt;) //: # ( &lt;/swiper-slide&gt;) //: # ( &lt;/swiper-slide&gt;) //: # (&lt;/swiper-container&gt;) //: # () //: # (## Image Comparison Slider) //: # () //: # (This is a simple image comparison slider. It uses the [img-comparison-slider](https://img-comparison-slider.sneas.io/) library. Check the [examples page](https://img-comparison-slider.sneas.io/examples.html) for more information of what you can achieve with it.) //: # () //: # () [//]: # ( ) //: # ( ) //: # (&lt;/img-comparison-slider&gt;)]]></summary></entry><entry><title type="html">Code Diff</title><link href="https://lxzgogoduck.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="Code Diff"/><published>2024-01-27T00:00:00+00:00</published><updated>2024-01-27T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/code-diff/"><![CDATA[<table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( scripts/hulk.js</td> <td>4 ++‚Äì)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( src/diff2html.js</td> <td>3 +‚Äì)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( src/file-list-printer.js</td> <td>11 ++++++++‚Äî)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( src/hoganjs-utils.js</td> <td>29 +++++++++++++++++‚Äî‚Äî‚Äî‚Äî)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( src/html-printer.js</td> <td>6 ++++++)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( src/line-by-line-printer.js</td> <td>6 +++++-)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( src/side-by-side-printer.js</td> <td>6 +++++-)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( test/file-list-printer-tests.js</td> <td>2 +-)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( test/hogan-cache-tests.js</td> <td>18 +++++++++++++++‚Äî)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( test/line-by-line-tests.js</td> <td>3 +‚Äì)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( test/side-by-side-printer-tests.js</td> <td>3 +‚Äì)</td> </tr> </tbody> </table> <p><a href="# (```)">//</a>: # (- var openedFile = fs.readFileSync(file, ‚Äòutf-8‚Äô);)</p> <p><a href="# (```)">//</a>: # (+ var openedFile = fs.readFileSync(file, ‚Äòutf-8‚Äô).trim();)</p> <p><a href="# (```)">//</a>: # ( name = namespace(path.basename(file).replace(/..*$/, ‚Äò‚Äò));)</p> <p><a href="# (```)">//</a>: # ( fs.writeFileSync(path.join(options.outputdir, name + ‚Äò.js‚Äô))</p> <p><a href="# (```)">//</a>: # ( var fileList = ‚Äò‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var diffOutput = ‚Äò‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var baseTemplatesPath = ‚Äòfile-summary‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var iconsBaseTemplatesPath = ‚Äòicon‚Äô;)</p> <p><a href="# (```)">//</a>: # (- var templatesPath = path.resolve(__dirname, ‚Äòtemplates‚Äô);)</p> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # (+ this.config = configuration</td> <td>¬†</td> <td>{};)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # (+ extraTemplates = this.config.templates</td> <td>¬†</td> <td>{};)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # (- var config = configuration</td> <td>¬†</td> <td>{};)</td> </tr> </tbody> </table> <p><a href="# (```)">//</a>: # (+ var templatesPath = path.resolve(__dirname, ‚Äòtemplates‚Äô);)</p> <p><a href="# (```)">//</a>: # ( var templateContent = fs.readFileSync(templatePath + ‚Äò.mustache‚Äô, ‚Äòutf8‚Äô);)</p> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # (+ return extraTemplates[templateKey]</td> <td>¬†</td> <td>hoganTemplates[templateKey];)</td> </tr> </tbody> </table> <p><a href="# (```)">//</a>: # ( return namespace + ‚Äò-‚Äò + view;)</p> <p><a href="# (```)">//</a>: # ( var genericTemplatesPath = ‚Äògeneric‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var baseTemplatesPath = ‚Äòline-by-line‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var iconsBaseTemplatesPath = ‚Äòicon‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var genericTemplatesPath = ‚Äògeneric‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var baseTemplatesPath = ‚Äòside-by-side‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var iconsBaseTemplatesPath = ‚Äòicon‚Äô;)</p> <p><a href="# (```)">//</a>: # ( var result = HoganJsUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {)</p> <p><a href="# (```)">//</a>: # ( contentClass: ‚Äòd2h-code-line‚Äô,)</p> <p><a href="# (```)">//</a>: # (- assert.equal(emptyDiffHtml + ‚Äò\n‚Äô, result);)</p> <p><a href="# (```)">//</a>: # (- var result = HoganJsUtils.render(‚Äògeneric‚Äô, ‚Äòmissing-template‚Äô, {}, {noCache: true});)</p> <p><a href="# (```)">//</a>: # (+ var result = hoganUtils.render(‚Äògeneric‚Äô, ‚Äòmissing-template‚Äô, {});)</p> <p><a href="# (```)">//</a>: # (+ var result = hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});)</p> <p><a href="# (```)">//</a>: # ( ‚Äò File without changes\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/div&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/td&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # (- ‚Äò&lt;/tr&gt;\n‚Äô;)</p> <p><a href="# (```)">//</a>: # (+ ‚Äò&lt;/tr&gt;‚Äô;)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/div&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/td&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò&lt;/tr&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # (- ‚Äò\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/tbody&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/table&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/div&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò File without changes\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/div&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/td&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # (- ‚Äò&lt;/tr&gt;\n‚Äô;)</p> <p><a href="# (```)">//</a>: # (+ ‚Äò&lt;/tr&gt;‚Äô;)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/div&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/td&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò&lt;/tr&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # (- ‚Äò\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/tbody&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/table&gt;\n‚Äô +)</p> <p><a href="# (```)">//</a>: # ( ‚Äò &lt;/div&gt;\n‚Äô +)</p> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( README.md</td> <td>3 +++)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( src/hoganjs-utils.js</td> <td>7 +++++++)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( test/hogan-cache-tests.js</td> <td>24 +++++++++++++++++++++++-)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( this.config = configuration</td> <td>¬†</td> <td>{};)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # ( extraTemplates = this.config.templates</td> <td>¬†</td> <td>{};)</td> </tr> </tbody> </table> <table> <tbody> <tr> <td><a href="# (```)">//</a>: # (+ var rawTemplates = this.config.rawTemplates</td> <td>¬†</td> <td>{};)</td> </tr> </tbody> </table> <p><a href="# (```)">//</a>: # ( var result = hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});)</p> <p><a href="# (```)">//</a>: # (+ var emptyDiffTemplate = ‚Äò&lt;p&gt;&lt;/p&gt;‚Äô;)</p> <p><a href="# (```)">//</a>: # (+ var result = hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});)</p> <p><a href="# (```)">//</a>: # (+ var emptyDiffTemplateUncompiled = ‚Äò&lt;p&gt;Not used!&lt;/p&gt;‚Äô;)</p> <p><a href="# (```)">//</a>: # (+ var result = hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});)</p>]]></content><author><name></name></author><summary type="html"><![CDATA[//: # (- var openedFile=fs.readFileSync(file, ‚Äòutf-8‚Äô);) //: # (+ var openedFile=fs.readFileSync(file, ‚Äòutf-8‚Äô).trim();) //: # ( var name;) //: # ( if (!openedFile) return;) //: # ( name=namespace(path.basename(file).replace(/..*$/, ‚Äò‚Äò));) //: # (- openedFile=removeByteOrderMark(openedFile.trim());) //: # (+ openedFile=removeByteOrderMark(openedFile);) //: # ( openedFile=wrap(file, name, openedFile);) //: # ( if (!options.outputdir) return openedFile;) //: # ( fs.writeFileSync(path.join(options.outputdir, name + ‚Äò.js‚Äô)) //: # (diff ‚Äìgit a/src/diff2html.js b/src/diff2html.js) //: # (index 21b0119e..64e138f5 100644) //: # (‚Äî a/src/diff2html.js) //: # (+++ b/src/diff2html.js) //: # (@@ -7,7 +7,6 @@) //: # () //: # ( (function() {) //: # ( var diffParser=require(‚Äô./diff-parser.js‚Äô).DiffParser;) //: # (- var fileLister=require(‚Äô./file-list-printer.js‚Äô).FileListPrinter;) //: # ( var htmlPrinter=require(‚Äô./html-printer.js‚Äô).HtmlPrinter;) //: # () //: # ( function Diff2Html() {) //: # (@@ -43,7 +42,7 @@) //: # () //: # ( var fileList=‚Äò‚Äô;) //: # ( if (configOrEmpty.showFiles === true) {) //: # (- fileList=fileLister.generateFileList(diffJson, configOrEmpty);) //: # (+ fileList=htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);) //: # ( }) //: # () //: # ( var diffOutput=‚Äò‚Äô;) //: # (diff ‚Äìgit a/src/file-list-printer.js b/src/file-list-printer.js) //: # (index e408d9b2..1e0a2c61 100644) //: # (‚Äî a/src/file-list-printer.js) //: # (+++ b/src/file-list-printer.js) //: # (@@ -8,11 +8,16 @@) //: # ( (function() {) //: # ( var printerUtils=require(‚Äô./printer-utils.js‚Äô).PrinterUtils;) //: # () //: # (- var hoganUtils=require(‚Äô./hoganjs-utils.js‚Äô).HoganJsUtils;) //: # (+ var hoganUtils;) //: # (+) //: # ( var baseTemplatesPath=‚Äòfile-summary‚Äô;) //: # ( var iconsBaseTemplatesPath=‚Äòicon‚Äô;) //: # () //: # (- function FileListPrinter() {) //: # (+ function FileListPrinter(config) {) //: # (+ this.config = config;) //: # (+) //: # (+ var HoganJsUtils=require(‚Äô./hoganjs-utils.js‚Äô).HoganJsUtils;) //: # (+ hoganUtils=new HoganJsUtils(config);) //: # ( }) //: # () //: # ( FileListPrinter.prototype.generateFileList = function(diffFiles) {) //: # (@@ -38,5 +43,5 @@) //: # ( });) //: # ( };) //: # () //: # (- module.exports.FileListPrinter = new FileListPrinter();) //: # (+ module.exports.FileListPrinter = FileListPrinter;) //: # ( })();) //: # (diff ‚Äìgit a/src/hoganjs-utils.js b/src/hoganjs-utils.js) //: # (index 9949e5fa..0dda08d7 100644) //: # (‚Äî a/src/hoganjs-utils.js) //: # (+++ b/src/hoganjs-utils.js) //: # (@@ -8,18 +8,19 @@) //: # ( (function() {) //: # ( var fs=require(‚Äòfs‚Äô);) //: # ( var path=require(‚Äòpath‚Äô);) //: # (-) //: # ( var hogan=require(‚Äòhogan.js‚Äô);) //: # () //: # ( var hoganTemplates=require(‚Äô./templates/diff2html-templates.js‚Äô);) //: # () //: # (- var templatesPath=path.resolve(__dirname, ‚Äòtemplates‚Äô);) //: # (+ var extraTemplates;) //: # () //: # (- function HoganJsUtils() {) //: # (+ function HoganJsUtils(configuration) {) //: # (+ this.config = configuration || {};) //: # (+ extraTemplates=this.config.templates || {};) //: # ( }) //: # () //: # (- HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {) //: # (- var template=this.template(namespace, view, configuration);) //: # (+ HoganJsUtils.prototype.render = function(namespace, view, params) {) //: # (+ var template=this.template(namespace, view);) //: # ( if (template) {) //: # ( return template.render(params);) //: # ( }) //: # (@@ -27,17 +28,16 @@) //: # ( return null;) //: # ( };) //: # () //: # (- HoganJsUtils.prototype.template = function(namespace, view, configuration) {) //: # (- var config=configuration || {};) //: # (+ HoganJsUtils.prototype.template = function(namespace, view) {) //: # ( var templateKey=this._templateKey(namespace, view);) //: # () //: # (- return this._getTemplate(templateKey, config);) //: # (+ return this._getTemplate(templateKey);) //: # ( };) //: # () //: # (- HoganJsUtils.prototype._getTemplate = function(templateKey, config) {) //: # (+ HoganJsUtils.prototype._getTemplate = function(templateKey) {) //: # ( var template;) //: # () //: # (- if (!config.noCache) {) //: # (+ if (!this.config.noCache) {) //: # ( template=this._readFromCache(templateKey);) //: # ( }) //: # () //: # (@@ -53,6 +53,7 @@) //: # () //: # ( try {) //: # ( if (fs.readFileSync) {) //: # (+ var templatesPath=path.resolve(__dirname, ‚Äòtemplates‚Äô);) //: # ( var templatePath=path.join(templatesPath, templateKey);) //: # ( var templateContent=fs.readFileSync(templatePath + ‚Äò.mustache‚Äô, ‚Äòutf8‚Äô);) //: # ( template=hogan.compile(templateContent);) //: # (@@ -66,12 +67,16 @@) //: # ( };) //: # () //: # ( HoganJsUtils.prototype._readFromCache = function(templateKey) {) //: # (- return hoganTemplates[templateKey];) //: # (+ return extraTemplates[templateKey] || hoganTemplates[templateKey];) //: # ( };) //: # () //: # ( HoganJsUtils.prototype._templateKey = function(namespace, view) {) //: # ( return namespace + ‚Äò-‚Äò + view;) //: # ( };) //: # () //: # (- module.exports.HoganJsUtils = new HoganJsUtils();) //: # (+ HoganJsUtils.prototype.compile = function(templateStr) {) //: # (+ return hogan.compile(templateStr);) //: # (+ };) //: # (+) //: # (+ module.exports.HoganJsUtils = HoganJsUtils;) //: # ( })();) //: # (diff ‚Äìgit a/src/html-printer.js b/src/html-printer.js) //: # (index 585d5b66..13f83047 100644) //: # (‚Äî a/src/html-printer.js) //: # (+++ b/src/html-printer.js) //: # (@@ -8,6 +8,7 @@) //: # ( (function() {) //: # ( var LineByLinePrinter=require(‚Äô./line-by-line-printer.js‚Äô).LineByLinePrinter;) //: # ( var SideBySidePrinter=require(‚Äô./side-by-side-printer.js‚Äô).SideBySidePrinter;) //: # (+ var FileListPrinter=require(‚Äô./file-list-printer.js‚Äô).FileListPrinter;) //: # () //: # ( function HtmlPrinter() {) //: # ( }) //: # (@@ -22,5 +23,10 @@) //: # ( return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);) //: # ( };) //: # () //: # (+ HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {) //: # (+ var fileListPrinter=new FileListPrinter(config);) //: # (+ return fileListPrinter.generateFileList(diffJson);) //: # (+ };) //: # (+) //: # ( module.exports.HtmlPrinter = new HtmlPrinter();) //: # ( })();) //: # (diff ‚Äìgit a/src/line-by-line-printer.js b/src/line-by-line-printer.js) //: # (index b07eb53c..d230bedd 100644) //: # (‚Äî a/src/line-by-line-printer.js) //: # (+++ b/src/line-by-line-printer.js) //: # (@@ -11,7 +11,8 @@) //: # ( var utils=require(‚Äô./utils.js‚Äô).Utils;) //: # ( var Rematch=require(‚Äô./rematch.js‚Äô).Rematch;) //: # () //: # (- var hoganUtils=require(‚Äô./hoganjs-utils.js‚Äô).HoganJsUtils;) //: # (+ var hoganUtils;) //: # (+) //: # ( var genericTemplatesPath=‚Äògeneric‚Äô;) //: # ( var baseTemplatesPath=‚Äòline-by-line‚Äô;) //: # ( var iconsBaseTemplatesPath=‚Äòicon‚Äô;) //: # (@@ -19,6 +20,9 @@) //: # () //: # ( function LineByLinePrinter(config) {) //: # ( this.config = config;) //: # (+) //: # (+ var HoganJsUtils=require(‚Äô./hoganjs-utils.js‚Äô).HoganJsUtils;) //: # (+ hoganUtils=new HoganJsUtils(config);) //: # ( }) //: # () //: # ( LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {) //: # (diff ‚Äìgit a/src/side-by-side-printer.js b/src/side-by-side-printer.js) //: # (index bbf1dc8d..5e3033b3 100644) //: # (‚Äî a/src/side-by-side-printer.js) //: # (+++ b/src/side-by-side-printer.js) //: # (@@ -11,7 +11,8 @@) //: # ( var utils=require(‚Äô./utils.js‚Äô).Utils;) //: # ( var Rematch=require(‚Äô./rematch.js‚Äô).Rematch;) //: # () //: # (- var hoganUtils=require(‚Äô./hoganjs-utils.js‚Äô).HoganJsUtils;) //: # (+ var hoganUtils;) //: # (+) //: # ( var genericTemplatesPath=‚Äògeneric‚Äô;) //: # ( var baseTemplatesPath=‚Äòside-by-side‚Äô;) //: # ( var iconsBaseTemplatesPath=‚Äòicon‚Äô;) //: # (@@ -26,6 +27,9 @@) //: # () //: # ( function SideBySidePrinter(config) {) //: # ( this.config = config;) //: # (+) //: # (+ var HoganJsUtils=require(‚Äô./hoganjs-utils.js‚Äô).HoganJsUtils;) //: # (+ hoganUtils=new HoganJsUtils(config);) //: # ( }) //: # () //: # ( SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {) //: # (diff ‚Äìgit a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js) //: # (index a502a46f..60ea3208 100644) //: # (‚Äî a/test/file-list-printer-tests.js) //: # (+++ b/test/file-list-printer-tests.js) //: # (@@ -1,6 +1,6 @@) //: # ( var assert=require(‚Äòassert‚Äô);) //: # () //: # (-var fileListPrinter=require(‚Äô../src/file-list-printer.js‚Äô).FileListPrinter;) //: # (+var fileListPrinter=new (require(‚Äô../src/file-list-printer.js‚Äô).FileListPrinter)();) //: # () //: # ( describe(‚ÄòFileListPrinter‚Äô, function() {) //: # ( describe(‚ÄògenerateFileList‚Äô, function() {) //: # (diff ‚Äìgit a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js) //: # (index 190bf6f8..3bb754ac 100644) //: # (‚Äî a/test/hogan-cache-tests.js) //: # (+++ b/test/hogan-cache-tests.js) //: # (@@ -1,6 +1,6 @@) //: # ( var assert=require(‚Äòassert‚Äô);) //: # () //: # (-var HoganJsUtils=require(‚Äô../src/hoganjs-utils.js‚Äô).HoganJsUtils;) //: # (+var HoganJsUtils=new (require(‚Äô../src/hoganjs-utils.js‚Äô).HoganJsUtils)();) //: # ( var diffParser=require(‚Äô../src/diff-parser.js‚Äô).DiffParser;) //: # () //: # ( describe(‚ÄòHoganJsUtils‚Äô, function() {) //: # (@@ -21,16 +21,28 @@ describe(‚ÄòHoganJsUtils‚Äô, function() {) //: # ( });) //: # ( assert.equal(emptyDiffHtml, result);) //: # ( });) //: # (+) //: # ( it(‚Äòshould render view without cache‚Äô, function() {) //: # ( var result=HoganJsUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {) //: # ( contentClass: ‚Äòd2h-code-line‚Äô,) //: # ( diffParser: diffParser) //: # ( }, {noCache: true});) //: # (- assert.equal(emptyDiffHtml + ‚Äò\n‚Äô, result);) //: # (+ assert.equal(emptyDiffHtml, result);) //: # ( });) //: # (+) //: # ( it(‚Äòshould return null if template is missing‚Äô, function() {) //: # (- var result=HoganJsUtils.render(‚Äògeneric‚Äô, ‚Äòmissing-template‚Äô, {}, {noCache: true});) //: # (+ var hoganUtils=new (require(‚Äô../src/hoganjs-utils.js‚Äô).HoganJsUtils)({noCache: true});) //: # (+ var result=hoganUtils.render(‚Äògeneric‚Äô, ‚Äòmissing-template‚Äô, {});) //: # ( assert.equal(null, result);) //: # ( });) //: # (+) //: # (+ it(‚Äòshould allow templates to be overridden‚Äô, function() {) //: # (+ var emptyDiffTemplate=HoganJsUtils.compile(‚Äò&lt;p&gt;&lt;/p&gt;‚Äò);) //: # (+) //: # (+ var config={templates: {‚Äògeneric-empty-diff‚Äô: emptyDiffTemplate}};) //: # (+ var hoganUtils=new (require(‚Äô../src/hoganjs-utils.js‚Äô).HoganJsUtils)(config);) //: # (+ var result=hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});) //: # (+ assert.equal(‚Äò&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;‚Äô, result);) //: # (+ });) //: # ( });) //: # ( });) //: # (diff ‚Äìgit a/test/line-by-line-tests.js b/test/line-by-line-tests.js) //: # (index 1cd92073..8869b3df 100644) //: # (‚Äî a/test/line-by-line-tests.js) //: # (+++ b/test/line-by-line-tests.js) //: # (@@ -14,7 +14,7 @@ describe(‚ÄòLineByLinePrinter‚Äô, function() {) //: # ( ‚Äò File without changes\n‚Äô +) //: # ( ‚Äò &lt;/div&gt;\n‚Äô +) //: # ( ‚Äò &lt;/td&gt;\n‚Äô +) //: # (- ‚Äò&lt;/tr&gt;\n‚Äô;) //: # (+ ‚Äò&lt;/tr&gt;‚Äô;) //: # () //: # ( assert.equal(expected, fileHtml);) //: # ( });) //: # (@@ -422,7 +422,6 @@ describe(‚ÄòLineByLinePrinter‚Äô, function() {) //: # ( ‚Äò &lt;/div&gt;\n‚Äô +) //: # ( ‚Äò &lt;/td&gt;\n‚Äô +) //: # ( ‚Äò&lt;/tr&gt;\n‚Äô +) //: # (- ‚Äò\n‚Äô +) //: # ( ‚Äò &lt;/tbody&gt;\n‚Äô +) //: # ( ‚Äò &lt;/table&gt;\n‚Äô +) //: # ( ‚Äò &lt;/div&gt;\n‚Äô +) //: # (diff ‚Äìgit a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js) //: # (index 76625f8e..771daaa5 100644) //: # (‚Äî a/test/side-by-side-printer-tests.js) //: # (+++ b/test/side-by-side-printer-tests.js) //: # (@@ -14,7 +14,7 @@ describe(‚ÄòSideBySidePrinter‚Äô, function() {) //: # ( ‚Äò File without changes\n‚Äô +) //: # ( ‚Äò &lt;/div&gt;\n‚Äô +) //: # ( ‚Äò &lt;/td&gt;\n‚Äô +) //: # (- ‚Äò&lt;/tr&gt;\n‚Äô;) //: # (+ ‚Äò&lt;/tr&gt;‚Äô;) //: # () //: # ( assert.equal(expectedRight, fileHtml.right);) //: # ( assert.equal(expectedLeft, fileHtml.left);) //: # (@@ -324,7 +324,6 @@ describe(‚ÄòSideBySidePrinter‚Äô, function() {) //: # ( ‚Äò &lt;/div&gt;\n‚Äô +) //: # ( ‚Äò &lt;/td&gt;\n‚Äô +) //: # ( ‚Äò&lt;/tr&gt;\n‚Äô +) //: # (- ‚Äò\n‚Äô +) //: # ( ‚Äò &lt;/tbody&gt;\n‚Äô +) //: # ( ‚Äò &lt;/table&gt;\n‚Äô +) //: # ( ‚Äò &lt;/div&gt;\n‚Äô +) //: # () //: # (From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001) //: # (From: Rodrigo Fernandes rtfrodrigo@gmail.com) //: # (Date: Sat, 15 Oct 2016 13:21:22 +0100) //: # (Subject: [PATCH 2/2] Allow uncompiled templates) //: # () //: # (‚Äî) //: # ( README.md | 3 +++) //: # ( src/hoganjs-utils.js | 7 +++++++) //: # ( test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-) //: # ( 3 files changed, 33 insertions(+), 1 deletion(-)) //: # () //: # (diff ‚Äìgit a/README.md b/README.md) //: # (index 132c8a28..46909f25 100644) //: # (‚Äî a/README.md) //: # (+++ b/README.md) //: # (@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options) //: # ( - synchronisedScroll: scroll both panes in side-by-side mode: true or false, default is false) //: # ( - matchWordsThreshold: similarity threshold for word matching, default is 0.25) //: # ( - matchingMaxComparisons: perform at most this much comparisons for line matching a block of changes, default is 2500) //: # (+ - templates: object with previously compiled templates to replace parts of the html) //: # (+ - rawTemplates: object with raw not compiled templates to replace parts of the html) //: # (+ &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)) //: # () //: # ( ## Diff2HtmlUI Helper) //: # () //: # (diff ‚Äìgit a/src/hoganjs-utils.js b/src/hoganjs-utils.js) //: # (index 0dda08d7..b2e9c275 100644) //: # (‚Äî a/src/hoganjs-utils.js) //: # (+++ b/src/hoganjs-utils.js) //: # (@@ -17,6 +17,13 @@) //: # ( function HoganJsUtils(configuration) {) //: # ( this.config = configuration || {};) //: # ( extraTemplates=this.config.templates || {};) //: # (+) //: # (+ var rawTemplates=this.config.rawTemplates || {};) //: # (+ for (var templateName in rawTemplates) {) //: # (+ if (rawTemplates.hasOwnProperty(templateName)) {) //: # (+ if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);) //: # (+ }) //: # (+ }) //: # ( }) //: # () //: # ( HoganJsUtils.prototype.render = function(namespace, view, params) {) //: # (diff ‚Äìgit a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js) //: # (index 3bb754ac..a34839c0 100644) //: # (‚Äî a/test/hogan-cache-tests.js) //: # (+++ b/test/hogan-cache-tests.js) //: # (@@ -36,7 +36,7 @@ describe(‚ÄòHoganJsUtils‚Äô, function() {) //: # ( assert.equal(null, result);) //: # ( });) //: # () //: # (- it(‚Äòshould allow templates to be overridden‚Äô, function() {) //: # (+ it(‚Äòshould allow templates to be overridden with compiled templates‚Äô, function() {) //: # ( var emptyDiffTemplate=HoganJsUtils.compile(‚Äò&lt;p&gt;&lt;/p&gt;‚Äò);) //: # () //: # ( var config={templates: {‚Äògeneric-empty-diff‚Äô: emptyDiffTemplate}};) //: # (@@ -44,5 +44,27 @@ describe(‚ÄòHoganJsUtils‚Äô, function() {) //: # ( var result=hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});) //: # ( assert.equal(‚Äò&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;‚Äô, result);) //: # ( });) //: # (+) //: # (+ it(‚Äòshould allow templates to be overridden with uncompiled templates‚Äô, function() {) //: # (+ var emptyDiffTemplate=‚Äò&lt;p&gt;&lt;/p&gt;‚Äô;) //: # (+) //: # (+ var config={rawTemplates: {‚Äògeneric-empty-diff‚Äô: emptyDiffTemplate}};) //: # (+ var hoganUtils=new (require(‚Äô../src/hoganjs-utils.js‚Äô).HoganJsUtils)(config);) //: # (+ var result=hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});) //: # (+ assert.equal(‚Äò&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;‚Äô, result);) //: # (+ });) //: # (+) //: # (+ it(‚Äòshould allow templates to be overridden giving priority to compiled templates‚Äô, function() {) //: # (+ var emptyDiffTemplate=HoganJsUtils.compile(‚Äò&lt;p&gt;&lt;/p&gt;‚Äò);) //: # (+ var emptyDiffTemplateUncompiled=‚Äò&lt;p&gt;Not used!&lt;/p&gt;‚Äô;) //: # (+) //: # (+ var config={) //: # (+ templates: {‚Äògeneric-empty-diff‚Äô: emptyDiffTemplate},) //: # (+ rawTemplates: {‚Äògeneric-empty-diff‚Äô: emptyDiffTemplateUncompiled}) //: # (+ };) //: # (+ var hoganUtils=new (require(‚Äô../src/hoganjs-utils.js‚Äô).HoganJsUtils)(config);) //: # (+ var result=hoganUtils.render(‚Äògeneric‚Äô, ‚Äòempty-diff‚Äô, {myName: ‚ÄòRodrigo Fernandes‚Äô});) //: # (+ assert.equal(‚Äò&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;‚Äô, result);) //: # (+ });) //: # ( });) //: # ( });) //: # (```)]]></summary></entry><entry><title type="html">Vega Lite</title><link href="https://lxzgogoduck.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="Vega Lite"/><published>2024-01-27T00:00:00+00:00</published><updated>2024-01-27T00:00:00+00:00</updated><id>https://lxzgogoduck.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://lxzgogoduck.github.io/blog/2024/vega-lite/"><![CDATA[<p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äú$schema‚Äù: ‚Äúhttps://vega.github.io/schema/vega-lite/v5.json‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúdescription‚Äù: ‚ÄúA dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúdata‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúurl‚Äù: ‚Äúhttps://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútransform‚Äù: [)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( {‚Äúfilter‚Äù: ‚Äúdatum[‚ÄòIMDB Rating‚Äô] != null‚Äù},)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( {‚Äúfilter‚Äù: {‚ÄútimeUnit‚Äù: ‚Äúyear‚Äù, ‚Äúfield‚Äù: ‚ÄúRelease Date‚Äù, ‚Äúrange‚Äù: [null, 2019]}},)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äújoinaggregate‚Äù: [{)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúop‚Äù: ‚Äúmean‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúIMDB Rating‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúas‚Äù: ‚ÄúAverageRating‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúcalculate‚Äù: ‚Äúdatum[‚ÄòIMDB Rating‚Äô] - datum.AverageRating‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúas‚Äù: ‚ÄúRatingDelta‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúmark‚Äù: ‚Äúpoint‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúencoding‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúx‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúRelease Date‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútype‚Äù: ‚Äútemporal‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúy‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúRatingDelta‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútype‚Äù: ‚Äúquantitative‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútitle‚Äù: ‚ÄúRating Delta‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúcolor‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúRatingDelta‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútype‚Äù: ‚Äúquantitative‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúscale‚Äù: {‚ÄúdomainMid‚Äù: 0},)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútitle‚Äù: ‚ÄúRating Delta‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äú$schema‚Äù: ‚Äúhttps://vega.github.io/schema/vega-lite/v5.json‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúdescription‚Äù: ‚ÄúA dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúdata‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúurl‚Äù: ‚Äúhttps://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútransform‚Äù: [)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( {‚Äúfilter‚Äù: ‚Äúdatum[‚ÄòIMDB Rating‚Äô] != null‚Äù},)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( {‚Äúfilter‚Äù: {‚ÄútimeUnit‚Äù: ‚Äúyear‚Äù, ‚Äúfield‚Äù: ‚ÄúRelease Date‚Äù, ‚Äúrange‚Äù: [null, 2019]}},)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äújoinaggregate‚Äù: [{)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúop‚Äù: ‚Äúmean‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúIMDB Rating‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúas‚Äù: ‚ÄúAverageRating‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúcalculate‚Äù: ‚Äúdatum[‚ÄòIMDB Rating‚Äô] - datum.AverageRating‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúas‚Äù: ‚ÄúRatingDelta‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúmark‚Äù: ‚Äúpoint‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúencoding‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúx‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúRelease Date‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútype‚Äù: ‚Äútemporal‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúy‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúRatingDelta‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútype‚Äù: ‚Äúquantitative‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútitle‚Äù: ‚ÄúRating Delta‚Äù)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúcolor‚Äù: {)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúfield‚Äù: ‚ÄúRatingDelta‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútype‚Äù: ‚Äúquantitative‚Äù,)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äúscale‚Äù: {‚ÄúdomainMid‚Äù: 0},)</p> <p><a href="# (This plot supports both light and dark themes.)">//</a>: # ( ‚Äútitle‚Äù: ‚ÄúRating Delta‚Äù)</p>]]></content><author><name></name></author><summary type="html"><![CDATA[//: # ( ‚Äú$schema‚Äù: ‚Äúhttps://vega.github.io/schema/vega-lite/v5.json‚Äù,) //: # ( ‚Äúdescription‚Äù: ‚ÄúA dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.‚Äù,) //: # ( ‚Äúdata‚Äù: {) //: # ( ‚Äúurl‚Äù: ‚Äúhttps://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json‚Äù) //: # ( },) //: # ( ‚Äútransform‚Äù: [) //: # ( {‚Äúfilter‚Äù: ‚Äúdatum[‚ÄòIMDB Rating‚Äô] != null‚Äù},) //: # ( {‚Äúfilter‚Äù: {‚ÄútimeUnit‚Äù: ‚Äúyear‚Äù, ‚Äúfield‚Äù: ‚ÄúRelease Date‚Äù, ‚Äúrange‚Äù: [null, 2019]}},) //: # ( {) //: # ( ‚Äújoinaggregate‚Äù: [{) //: # ( ‚Äúop‚Äù: ‚Äúmean‚Äù,) //: # ( ‚Äúfield‚Äù: ‚ÄúIMDB Rating‚Äù,) //: # ( ‚Äúas‚Äù: ‚ÄúAverageRating‚Äù) //: # ( }]) //: # ( },) //: # ( {) //: # ( ‚Äúcalculate‚Äù: ‚Äúdatum[‚ÄòIMDB Rating‚Äô] - datum.AverageRating‚Äù,) //: # ( ‚Äúas‚Äù: ‚ÄúRatingDelta‚Äù) //: # ( }) //: # ( ],) //: # ( ‚Äúmark‚Äù: ‚Äúpoint‚Äù,) //: # ( ‚Äúencoding‚Äù: {) //: # ( ‚Äúx‚Äù: {) //: # ( ‚Äúfield‚Äù: ‚ÄúRelease Date‚Äù,) //: # ( ‚Äútype‚Äù: ‚Äútemporal‚Äù) //: # ( },) //: # ( ‚Äúy‚Äù: {) //: # ( ‚Äúfield‚Äù: ‚ÄúRatingDelta‚Äù,) //: # ( ‚Äútype‚Äù: ‚Äúquantitative‚Äù,) //: # ( ‚Äútitle‚Äù: ‚ÄúRating Delta‚Äù) //: # ( },) //: # ( ‚Äúcolor‚Äù: {) //: # ( ‚Äúfield‚Äù: ‚ÄúRatingDelta‚Äù,) //: # ( ‚Äútype‚Äù: ‚Äúquantitative‚Äù,) //: # ( ‚Äúscale‚Äù: {‚ÄúdomainMid‚Äù: 0},) //: # ( ‚Äútitle‚Äù: ‚ÄúRating Delta‚Äù) //: # ( }) //: # ( }) //: # (}) //: # () [//]: # () [//]: # () [//]: # (Which generates:) [//]: # () [//]: # (vega_lite) [//]: # ({) [//]: # ( "$schema": "https://vega.github.io/schema/vega-lite/v5.json",) [//]: # ( "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",) [//]: # ( "data": {) [//]: # ( "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json") [//]: # ( },) [//]: # ( "transform": [) [//]: # ( {"filter": "datum['IMDB Rating'] != null"},) [//]: # ( {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},) [//]: # ( {) [//]: # ( "joinaggregate": [{) [//]: # ( "op": "mean",) [//]: # ( "field": "IMDB Rating",) [//]: # ( "as": "AverageRating") [//]: # ( }]) [//]: # ( },) [//]: # ( {) [//]: # ( "calculate": "datum['IMDB Rating'] - datum.AverageRating",) [//]: # ( "as": "RatingDelta") [//]: # ( }) [//]: # ( ],) [//]: # ( "mark": "point",) [//]: # ( "encoding": {) [//]: # ( "x": {) [//]: # ( "field": "Release Date",) [//]: # ( "type": "temporal") [//]: # ( },) [//]: # ( "y": {) [//]: # ( "field": "RatingDelta",) [//]: # ( "type": "quantitative",) [//]: # ( "title": "Rating Delta") [//]: # ( },) [//]: # ( "color": {) [//]: # ( "field": "RatingDelta",) [//]: # ( "type": "quantitative",) [//]: # ( "scale": {"domainMid": 0},) [//]: # ( "title": "Rating Delta") [//]: # ( }) [//]: # ( }) [//]: # (}) [//]: # (`) //: # () //: # (This plot supports both light and dark themes.)]]></summary></entry></feed>